{{- $email := promptStringOnce . "email" "Email address" -}}
{{- $fullName := promptStringOnce . "fullName" "Full name" -}}

{{- $codeDirWork := promptStringOnce . "codeDirWork" "Code dir (work; omit homedir prefix)" "Code/work" -}}
{{- $codeDirNonWork := promptStringOnce . "codeDirNonWork" "Code dir (nonwork; omit homedir prefix)" "Code/nonwork" -}}

{{- $cloneWorkRepos := promptBoolOnce . "cloneWorkRepos" "Clone work git repos" false -}}
{{- $cloneNonWorkRepos := promptBoolOnce . "cloneNonWorkRepos" "Clone NON-work git repos" false -}}

{{- $installFonts := promptBoolOnce . "installFonts" "Install fonts" false -}}

{{- $installExternalBinaries := promptBoolOnce . "installExternalBinaries" "Install external binaries" false -}}
{{- $installAITools := promptBoolOnce . "installAITools" "Install AI tools" false -}}

{{- $installGo := promptBoolOnce . "installGo" "Install Go" false -}}
{{- $installGoVersion := promptStringOnce . "installGoVersion" "Install Go version" "1.24.1" -}}
{{- $goPath := promptStringOnce . "goPath" "Value of GOPATH (omit homedir prefix)" ".local/go" -}}

{{- $glanceWork := promptBoolOnce . "glanceWork" "Display glance work info" false -}}

encryption = "age"

[age]
identity = "~/.config/chezmoi/id.txt"
recipient = "age1zyudjx9v6z07k5d76s3zw2576fcme3nhq2wtvurlxnvznwht39zqagfa7n"

[diff]
command = "delta"
pager = "delta"

[data]
email = {{ $email | quote }}
fullName = {{ $fullName | quote }}

codeDirWork = {{ $codeDirWork | quote }}
codeDirNonWork = {{ $codeDirNonWork | quote }}

cloneWorkRepos = {{ $cloneWorkRepos }}
cloneNonWorkRepos = {{ $cloneNonWorkRepos }}
installAITools = {{ $installAITools }}
installExternalBinaries = {{ $installExternalBinaries }}
installFonts = {{ $installFonts }}

installGo = {{ $installGo }}
goPath = {{ $goPath | quote }}
goPathWithHomePrefix = {{ printf "$HOME/%s" $goPath | expandenv | quote }}
goRoot = {{ printf "$HOME/%s/go-%s" $goPath $installGoVersion | expandenv | quote }}

glanceWork = {{ $glanceWork }}


[data.packages]
arch_ubuntu = [
"acpi",
"aria2",
"duf",
"htop",
"mkosi",
"mtr",
"mpv",
"neofetch",
"nvtop",
"ripgrep",
"tig",
"tree",
"zoxide",
]

arch = [
"age",
"chromium",
"dust",
"emacs-wayland",
"firefox",
"go",
"gopass",
"imv",
"noto-fonts-cjk",
"swayimg",
"ttf-firacode-nerd",
"ttf-go-nerd",
"ttf-iosevka-nerd",
"ttf-jetbrains-mono-nerd",
"ttf-noto-nerd",
"uv",
"zig",
]

ubuntu = [
]

ubuntu_snaps = [
"bun-js",
"dust",
"vault",
]

ubuntu_snaps_classic = [
"chezmoi",
"opentofu",
"zig",
]

alpine = [
]


[data.toolVersion]
aichat = "v0.29.0"
cue = "v0.12.0"
delta = "0.18.2"
duckdb = "v1.2.1"
earthly = "v0.8.15"
fd = "v10.2.0"
go = {{ $installGoVersion | quote }}
kubectl = "v1.32.2"
llamafile = "0.9.1"
minikube = "v1.35.0"
ohMyPosh = "v25.6.0"
task = "v3.42.0"

# Local Variables:
# mode: toml-ts
# End:
